name: Scan

on:
  push:
    branches: [ main ]
  schedule:
    - cron: "0 6 * * *" # Every day at 8am

env:
  CONTAINER_REGISTRY: docker.io
  CONTAINER_IMAGE_NAME: hulkdx/ff-user
  CONTAINER_IMAGE_VERSION: v1

jobs:
  vulnerability-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # for cosign w/ keyless signing
      packages: write # for updating cosign attestation
      security-events: write
    steps:
      - uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@9ab158e8597f3b310480b9a69402b419bc03dbd5
        env:
          TRIVY_OFFLINE_SCAN: true
        with:
          image-ref: ${{ env.CONTAINER_IMAGE_NAME }}:${{ env.CONTAINER_IMAGE_VERSION }}
          format: "sarif"
          ignore-unfixed: true
          output: "trivy-results.sarif"
          severity: "CRITICAL,HIGH"
          exit-code: "1"
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: ${{ always() && github.ref == 'refs/heads/main' }}
        with:
          sarif_file: "trivy-results.sarif"
      
      - name: Generate cosign vulnerability scan record
        uses: aquasecurity/trivy-action@9ab158e8597f3b310480b9a69402b419bc03dbd5
        env:
          TRIVY_OFFLINE_SCAN: true
        with:
          image-ref: ${{ env.CONTAINER_IMAGE_NAME }}:${{ env.CONTAINER_IMAGE_VERSION }}
          format: "cosign-vuln"
          output: "vuln.json"
      - name: Install cosign
        uses: sigstore/cosign-installer@7cc35d7fdbe70d4278a0c96779081e6fac665f88
      
      - name: docker login
        run: |
          docker login --username ${{ secrets.DOCKER_USER }} --password-stdin <<< ${{ secrets.DOCKER_API_KEY }} &> /dev/null
      - name: Attest vulnerability scan
        run: cosign attest --replace --predicate vuln.json --type vuln ${{ env.CONTAINER_IMAGE_NAME }}:${{ env.CONTAINER_IMAGE_VERSION }}
        env:
          COSIGN_EXPERIMENTAL: "true"
