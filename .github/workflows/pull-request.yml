name: Pull-requests

on:
  pull_request:
    branches: [ "main" ]

jobs:
  # tests:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v3

  #   - name: gradle cache
  #     uses: actions/cache@v3
  #     with:
  #       path: |
  #         ~/.gradle/caches
  #         ~/.gradle/wrapper
  #       key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
  #       restore-keys: |
  #         ${{ runner.os }}-gradle-

  #   - uses: actions/setup-java@v3
  #     with:
  #       distribution: 'temurin'
  #       java-version: 19
  #       cache: 'gradle'

  #   - name: Run tests
  #     run: make test


  native-tests:
    runs-on: ubuntu-latest
    # services:
    #   postgres:
    #     image: postgres:15-alpine
    #     env:
    #       POSTGRES_USERNAME: postgres
    #       POSTGRES_PASSWORD: postgres
    #     ports:
    #       - 5432:5432
    #     options: >-
    #       --health-cmd pg_isready
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: gradle cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - uses: graalvm/setup-graalvm@v1
      with:
        java-version: '21'
        distribution: 'graalvm'

    # - name: Set up JDK
    #   uses: graalvm/setup-graalvm@v1
    #   with:
    #     version: '22.3.1'
    #     java-version: '19'

    - name: Run tests
      run: cd user-service && ./gradlew nativeTest
      env:
        prod: true
        # postgres_username: postgres
        # postgres_password: postgres
        # postgres_url: postgresql://postgresdb/postgres
        # r2dbc_postgres_password: ${postgres_password}
