name: deploy-to-kubernetes

on:
  push:
    branches: [ main ]

env:
  DOCKER_IMAGE_NAME: ${{ secrets.DOCKER_USER }}/ff-user:v1

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: gradle cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: 19

    - name: build
      run: |
        cd user-service
        prod=true ./gradlew bootBuildImage --imageName ${DOCKER_IMAGE_NAME}

    - name: docker push
      run: |
        docker login --username ${{ secrets.DOCKER_USER }} --password-stdin <<< ${{ secrets.DOCKER_API_KEY }}
        docker push ${DOCKER_IMAGE_NAME}

    - name: config credential
      run: |
        mkdir ~/.aws
        base64 --decode <<< ${{ secrets.AWS_CRED }} > ~/.aws/credentials
        base64 --decode <<< ${{ secrets.AWS_CONFIG }} > ~/.aws/config
        aws eks update-kubeconfig --name findprofessional_cluster

    - run: kubectl apply -k deploy/dev

    - name: cleanup
      if: always()
      run: |
        rm -rf ~/.docker ~/.kube ~/.aws
